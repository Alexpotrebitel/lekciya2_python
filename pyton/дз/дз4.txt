set1 = set([2, 4, 6, 8, 10, 12, 10, 8, 6, 4, 2])
set2 = set([3, 6, 9, 12, 15, 18])
common_nums = sorted(set1 & set2)
if common_nums:
    print(*common_nums)
else:
    print("Повторяющихся чисел нет")


#     
4.2[24]: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом. На входе задано количество ягод на каждом кусте. Не обязательно вводить их с клавиатуры, можно задать непосредственно в коде программы

# Примеры/Тесты:
# Input1: 1, 2, 3, 4, 5, 6, 7, 8
# Output1: Макс. кол-во ягод 21, собрано для куста 7

# Input1: 11, 92, 1, 42, 15, 12, 11, 81
# Output1: Макс. кол-во ягод 184, собрано для куста 1

# berries = [1, 2, 3, 4, 5, 6, 7, 8] # ягоды на каждом кусте

# max_sum = -1
# max_bush = -1

# for i in range(len(berries)):
#     if i == 0: # первый куст
#         berries_sum = berries[i] + berries[i+1] + berries[-1] # суммируем ягоды на первом, следующем и последнем кустах
#     elif i == len(berries) - 1: # последний куст
#         berries_sum = berries[i] + berries[0] + berries[i-1] # суммируем ягоды на последнем, предыдущем и первом кустах
#     else: # все остальные кусты
#         berries_sum = berries[i] + berries[i-1] + berries[i+1] # суммируем ягоды на текущем, предыдущем и следующем кустах
    
#     if berries_sum > max_sum:
#         max_sum = berries_sum
#         max_bush = i+1 # кусты пронумерованы с 1, а не с 0

# if max_sum == -1:
#     print("Ягод на грядке нет")
# else:
#     print(f"Макс. кол-во ягод {max_sum}, собрано для куста {max_bush}")